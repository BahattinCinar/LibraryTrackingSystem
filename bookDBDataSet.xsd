<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="bookDBDataSet" targetNamespace="http://tempuri.org/bookDBDataSet.xsd" xmlns:mstns="http://tempuri.org/bookDBDataSet.xsd" xmlns="http://tempuri.org/bookDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="bookDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="bookDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LibraryTrackingSystem.Properties.Settings.GlobalReference.Default.bookDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="bookDataTableAdapter" GeneratorDataComponentClassName="bookDataTableAdapter" Name="bookData" UserDataComponentName="bookDataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bookDBConnectionString (Settings)" DbObjectName="bookDB.dbo.bookData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[bookData] WHERE (([bookName] = @Original_bookName) AND ((@IsNull_bookClass = 1 AND [bookClass] IS NULL) OR ([bookClass] = @Original_bookClass)) AND ((@IsNull_id = 1 AND [id] IS NULL) OR ([id] = @Original_id)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bookName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bookClass" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bookClass" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bookClass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookClass" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[bookData] ([bookName], [bookClass], [id]) VALUES (@bookName, @bookClass, @id);
SELECT bookName, bookClass, id FROM bookData WHERE (bookName = @bookName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bookName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bookClass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookClass" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT bookName, bookClass, id FROM dbo.bookData</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[bookData] SET [bookName] = @bookName, [bookClass] = @bookClass, [id] = @id WHERE (([bookName] = @Original_bookName) AND ((@IsNull_bookClass = 1 AND [bookClass] IS NULL) OR ([bookClass] = @Original_bookClass)) AND ((@IsNull_id = 1 AND [id] IS NULL) OR ([id] = @Original_id)));
SELECT bookName, bookClass, id FROM bookData WHERE (bookName = @bookName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bookName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@bookClass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookClass" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bookName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_bookClass" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="bookClass" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_bookClass" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="bookClass" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="bookName" DataSetColumn="bookName" />
              <Mapping SourceColumn="bookClass" DataSetColumn="bookClass" />
              <Mapping SourceColumn="id" DataSetColumn="id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="userDataTableAdapter" GeneratorDataComponentClassName="userDataTableAdapter" Name="userData" UserDataComponentName="userDataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bookDBConnectionString (Settings)" DbObjectName="bookDB.dbo.userData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[userData] WHERE (([userName] = @Original_userName) AND ([userSurname] = @Original_userSurname) AND ([userPhoneNum] = @Original_userPhoneNum))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userSurname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userPhoneNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userPhoneNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[userData] ([userName], [userSurname], [userPhoneNum]) VALUES (@userName, @userSurname, @userPhoneNum);
SELECT userName, userSurname, userPhoneNum FROM userData WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userSurname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userPhoneNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userPhoneNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userName, userSurname, userPhoneNum FROM dbo.userData</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[userData] SET [userName] = @userName, [userSurname] = @userSurname, [userPhoneNum] = @userPhoneNum WHERE (([userName] = @Original_userName) AND ([userSurname] = @Original_userSurname) AND ([userPhoneNum] = @Original_userPhoneNum));
SELECT userName, userSurname, userPhoneNum FROM userData WHERE (userName = @userName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userSurname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userPhoneNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userPhoneNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userSurname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userPhoneNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userPhoneNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="userSurname" DataSetColumn="userSurname" />
              <Mapping SourceColumn="userPhoneNum" DataSetColumn="userPhoneNum" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="bookDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="bookDBDataSet" msprop:Generator_DataSetName="bookDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="bookData" msprop:Generator_RowEvHandlerName="bookDataRowChangeEventHandler" msprop:Generator_RowDeletedName="bookDataRowDeleted" msprop:Generator_RowDeletingName="bookDataRowDeleting" msprop:Generator_RowEvArgName="bookDataRowChangeEvent" msprop:Generator_TablePropName="bookData" msprop:Generator_RowChangedName="bookDataRowChanged" msprop:Generator_RowChangingName="bookDataRowChanging" msprop:Generator_TableClassName="bookDataDataTable" msprop:Generator_RowClassName="bookDataRow" msprop:Generator_TableVarName="tablebookData" msprop:Generator_UserTableName="bookData">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="bookName" msprop:Generator_ColumnPropNameInRow="bookName" msprop:Generator_ColumnPropNameInTable="bookNameColumn" msprop:Generator_ColumnVarNameInTable="columnbookName" msprop:Generator_UserColumnName="bookName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="bookClass" msprop:Generator_ColumnPropNameInRow="bookClass" msprop:Generator_ColumnPropNameInTable="bookClassColumn" msprop:Generator_ColumnVarNameInTable="columnbookClass" msprop:Generator_UserColumnName="bookClass" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="id" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="userData" msprop:Generator_RowEvHandlerName="userDataRowChangeEventHandler" msprop:Generator_RowDeletedName="userDataRowDeleted" msprop:Generator_RowDeletingName="userDataRowDeleting" msprop:Generator_RowEvArgName="userDataRowChangeEvent" msprop:Generator_TablePropName="userData" msprop:Generator_RowChangedName="userDataRowChanged" msprop:Generator_RowChangingName="userDataRowChanging" msprop:Generator_TableClassName="userDataDataTable" msprop:Generator_RowClassName="userDataRow" msprop:Generator_TableVarName="tableuserData" msprop:Generator_UserTableName="userData">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userName" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_ColumnVarNameInTable="columnuserName" msprop:Generator_UserColumnName="userName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userSurname" msprop:Generator_ColumnPropNameInRow="userSurname" msprop:Generator_ColumnPropNameInTable="userSurnameColumn" msprop:Generator_ColumnVarNameInTable="columnuserSurname" msprop:Generator_UserColumnName="userSurname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userPhoneNum" msprop:Generator_ColumnPropNameInRow="userPhoneNum" msprop:Generator_ColumnPropNameInTable="userPhoneNumColumn" msprop:Generator_ColumnVarNameInTable="columnuserPhoneNum" msprop:Generator_UserColumnName="userPhoneNum" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:bookData" />
      <xs:field xpath="mstns:bookName" />
    </xs:unique>
    <xs:unique name="userData_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:userData" />
      <xs:field xpath="mstns:userName" />
    </xs:unique>
  </xs:element>
</xs:schema>